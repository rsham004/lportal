name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: live-coding/package-lock.json
          
      - name: Install dependencies
        working-directory: ./live-coding
        run: npm ci
        
      - name: Run linting
        working-directory: ./live-coding
        run: npm run lint
        
      - name: Run type checking
        working-directory: ./live-coding
        run: npm run type-check
        
      - name: Run format check
        working-directory: ./live-coding
        run: npm run format:check
        
      - name: Run tests with coverage
        working-directory: ./live-coding
        run: npm run test:ci
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./live-coding/coverage
          fail_ci_if_error: true
        
      - name: Build application
        working-directory: ./live-coding
        run: npm run build
        
      - name: Build Storybook
        working-directory: ./live-coding
        run: npm run build-storybook

  lighthouse-ci:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: live-coding/package-lock.json
          
      - name: Install dependencies
        working-directory: ./live-coding
        run: npm ci
        
      - name: Build application
        working-directory: ./live-coding
        run: npm run build
        
      - name: Run Lighthouse CI
        working-directory: ./live-coding
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}